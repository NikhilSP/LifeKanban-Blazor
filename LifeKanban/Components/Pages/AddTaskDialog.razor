@using LifeKanban.Client
@using LifeKanban.Model
@inject ProjectsClient Client

<div class="modal fade show" id="myModal" style="display:block; background-color: rgba(10,10,10,.8);" aria-modal="true" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">@Title</h4>
                <button type="button" class="close" @onclick="@ModalCancel">&times;</button>
            </div>
            <div class="modal-body">
                <EditForm Model="@ProjectTaskItem" FormName="AddProject">
                    <div class="mb-3 mt-3">
                        <label for="taskName" class="form-label">Title</label>
                        <InputText id="taskName" class="form-control" @bind-Value="ProjectTaskItem.title"/>
                    </div>
                    <div class="mb-3 mt-3">
                        <label for="Description" class="form-label">Description</label>
                        <InputText id="Description" class="form-control" @bind-Value="ProjectTaskItem.description"/>
                    </div>
                </EditForm>
            </div>
            <div class="modal-footer">
                @switch (DialogType)
                {
                    case ModalDialogType.Ok:
                        <button type="button" class="btn btn-primary" @onclick=@ModalOk>Add Task</button>
                        break;
                    case ModalDialogType.OkCancel:
                        <button type="button" class="btn" @onclick="@ModalCancel">Cancel</button>
                        <button type="button" class="btn btn-primary" @onclick=@ModalOk>Add Task</button>
                        break;
                    case ModalDialogType.DeleteCancel:
                        <button type="button" class="btn" @onclick="@ModalCancel">Cancel</button>
                        <button type="button" class="btn btn-danger" @onclick=@ModalOk>Add Task</button>
                        break;
                }
            </div>
        </div>
    </div>
</div>

@code {
    [SupplyParameterFromForm] private ProjectTaskItem ProjectTaskItem { get; set; } = new ProjectTaskItem() { id = Guid.NewGuid() };

    [Parameter] public string Title { get; set; } = "Add Task Details";

    [Parameter] public string Text { get; set; }

    [Parameter] public Guid ProjectGuid { get; set; }

    [Parameter] public EventCallback<bool> OnClose { get; set; }

    [Parameter] public ModalDialogType DialogType { get; set; }
    
    [Parameter]
    public EventCallback<ProjectTaskItem> OnItemSelected { get; set; }

    private Task ModalCancel()
    {
        return OnClose.InvokeAsync(false);
    }

    private async Task<Task> ModalOk()
    {
        var result = await Client.AddTask(ProjectTaskItem, ProjectGuid);

        if (result)
        {
            await OnItemSelected.InvokeAsync(ProjectTaskItem);
        }
        
        return OnClose.InvokeAsync(true);
    }

    public enum ModalDialogType
    {
        Ok,
        OkCancel,
        DeleteCancel
    }

}